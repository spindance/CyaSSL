#
# Makefile
#
# CROSS_COMPILE specify the prefix used for all executables used
# during compilation. Only gcc and related bin-utils executables
# are prefixed with $(CROSS_COMPILE).
#
# CROSS_COMPILE can be set on the command line:
#   make CROSS_COMPILE=arm-none-eabi-
# or defeated:
#   make CROSS_COMPILE=
#
# ARCH is the target architecture.

ifndef CROSS_COMPILE
CROSS_COMPILE	= arm-none-eabi-
endif

# Make variables (CC, etc...)

CC		= $(CROSS_COMPILE)gcc
AR		= $(CROSS_COMPILE)ar
GDB             = $(CROSS_COMPILE)gdb

CFLAGS_GCOV	= -fprofile-arcs -ftest-coverage

#
# Build an object file from a .c source file.
#
$(BUILD_DIR)%.o: %.c
	@echo "+--$(CC) $<"
	$(Q)mkdir -p $(dir $@)
	$(Q)$(CC) $(CFLAGS) -o $@ $<


#
# The rule for creating an object library.
#
$(BUILD_DIR)%.a:
	@echo "+--$(AR) $@"
	$(Q)mkdir -p $(dir $@)
	$(Q)$(AR) -cr $@ $^




.PHONY: DUMP01
DUMP01 :
	@echo ""
	@echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@|@"
	@echo "DUMP01"
	@echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@|@"
	@echo "CURDIR:          $(CURDIR)"
	@echo "BUILD_DIR:       $(BUILD_DIR)"
	@echo ""
	@echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@|@"
	@echo ""
